import{g as n,j as a,l as s,f as t,q as e}from"./common-bec3f312.js";const l='{"title":"Journey&Flower |【第五期】在Github上搭建个人博客","frontmatter":{"date":"2022-11-19","title":"Journey&Flower |【第五期】在Github上搭建个人博客","tags":["博客","Github-Pages"],"describe":"在Github上搭建个人博客 申请博客 gitee.io"},"headers":[{"level":2,"title":"1. 下载vitepress模板","slug":"_1-下载vitepress模板"},{"level":2,"title":"2. 创建自己的博客仓库","slug":"_2-创建自己的博客仓库"},{"level":3,"title":"注意","slug":"注意"},{"level":2,"title":"3. 上传vitepress模板","slug":"_3-上传vitepress模板"},{"level":3,"title":"3.1第一步，删除从github上下载的源码里边的.git原始仓库信息","slug":"_3-1第一步，删除从github上下载的源码里边的-git原始仓库信息"},{"level":2,"title":"4.配置工作流","slug":"_4-配置工作流"},{"level":3,"title":"4.1为我们对应的仓库创建工作流文件","slug":"_4-1为我们对应的仓库创建工作流文件"},{"level":3,"title":"4.2注意","slug":"_4-2注意"},{"level":3,"title":"4.2提交文件","slug":"_4-2提交文件"},{"level":2,"title":"5. 设置Github Page","slug":"_5-设置github-page"},{"level":3,"title":"大功告成","slug":"大功告成"},{"level":2,"title":"6. 配置Gittalk","slug":"_6-配置gittalk"},{"level":3,"title":"6.1建存放评论的仓库  blog-comments","slug":"_6-1建存放评论的仓库-blog-comments"},{"level":3,"title":"6.2创建issues设置标签初始化","slug":"_6-2创建issues设置标签初始化"},{"level":3,"title":"代码配置","slug":"代码配置"},{"level":2,"title":"7.安全","slug":"_7-安全"},{"level":2,"title":"8. 感想","slug":"_8-感想"},{"level":2,"title":"9.特别感谢","slug":"_9-特别感谢"}],"relativePath":"docs/Github-Pages.md","lastUpdated":1739959579165.539}';var o={};const i=a("ul",null,[a("li",null,"下载vitepress模板"),a("li",null,"创建自己的博客仓库"),a("li",null,"上传vitepress模板"),a("li",null,"配置工作流"),a("li",null,"设置Github Page"),a("li",null,"配置Gittalk"),a("li",null,"撰写文章"),a("li",null,"安全问题")],-1),c=a("h2",{id:"_1-下载vitepress模板"},[a("a",{class:"header-anchor",href:"#_1-下载vitepress模板","aria-hidden":"true"},"#"),s(" 1. 下载vitepress模板")],-1),u=a("p",null,"下载模板很简单，用过git版本控制工具",-1),p=a("blockquote",null,[a("p",null,[s("纪年小姐姐美化过的 "),a("a",{href:"https://jexlau.github.io/blog/",target:"_blank",rel:"noopener noreferrer"},"纪年小姐姐的博客"),s(),a("a",{href:"https://github.com/JexLau/blog",target:"_blank",rel:"noopener noreferrer"},"纪年小姐姐的博客源码")])],-1),r=a("div",{class:"language-sh"},[a("pre",null,[a("code",null,"git clone https://github.com/JexLau/blog\n")])],-1),g=a("p",null,[a("img",{src:"/blog/_assets/image-20221120121421508.a3b18187.png",alt:"image-20221120121421508"})],-1),k=a("p",null,[a("img",{src:"/blog/_assets/image-20221120121607689.9bf04c01.png",alt:"image-20221120121607689"})],-1),m=a("p",null,[a("img",{src:"/blog/_assets/image-20221120121857720.b9ce7107.png",alt:"image-20221120121857720"})],-1),h=a("blockquote",null,[a("p",null,[s("没有git版本控制工具的话，可以直接从github管网上下载模板源码"),a("img",{src:"/blog/_assets/image-20221120122103962.7ecae301.png",alt:"image-20221120122103962"})])],-1),d=a("h2",{id:"_2-创建自己的博客仓库"},[a("a",{class:"header-anchor",href:"#_2-创建自己的博客仓库","aria-hidden":"true"},"#"),s(" 2. 创建自己的博客仓库")],-1),b=a("blockquote",null,[a("p",null,"创建自己的博客仓库，仓库名可以自定义，比如 blog 啦，article 啦 ... 等都可以")],-1),_=a("p",null,[a("img",{src:"/blog/_assets/image-20221120122322978.58d81967.png",alt:"image-20221120122322978"})],-1),f=a("p",null,[a("img",{src:"/blog/_assets/image-20221120122410173.45a75747.png",alt:"image-20221120122410173"})],-1),y=a("p",null,[a("img",{src:"/blog/_assets/image-20221120125441915.b018f446.png",alt:"image-20221120125441915"})],-1),v=a("blockquote",null,[a("p",null,[a("a",{href:"https://www.sohu.com/a/421667057_185201",target:"_blank",rel:"noopener noreferrer"},"10月份开始GitHub把master换成main：这是开发者需要知道的几点_分支 ")]),a("p",null,"另一项服务正从其技术剔除引起分歧的“master”术语。这回主角是GitHub，新的术语将由“master”改为“main”。这一变化的原因应该很明显，但此举是为了使这家公司摆脱任何提及奴隶制的印象，换成不会有误解的包容性术语。"),a("p",null,"技术界早该进行这种变化了，但至少终于有了实际行动。从2020年10月1日开始，所有“master分支”一律改名为“main分支”。")],-1),w=a("p",null,"很明显，这又是为了满足西方资本家的口头Constitutional right",-1),G=a("h3",{id:"注意"},[a("a",{class:"header-anchor",href:"#注意","aria-hidden":"true"},"#"),s(" 注意")],-1),E=a("p",null,[s("这里创建的仓库默认只有这个"),a("code",null,"main分支"),s("，我们"),a("code",null,"不要"),s("觉得不习惯而去把她改成"),a("code",null,"master分支"),s(" 因为那样做，会使我们执行第4歩 "),a("code",null,"配置工作流"),s(" 失败")],-1),C=a("p",null,[a("img",{src:"/blog/_assets/image-20221120131105961.c6bcd120.png",alt:"image-20221120131105961"})],-1),S=a("h2",{id:"_3-上传vitepress模板"},[a("a",{class:"header-anchor",href:"#_3-上传vitepress模板","aria-hidden":"true"},"#"),s(" 3. 上传vitepress模板")],-1),A=a("blockquote",null,[a("p",null,"上传载模板很简单，同样利用git版本控制工具"),a("p",null,[s("暂时"),a("code",null,"先不急着改动"),s("下载的"),a("code",null,"纪年小姐姐博客模板"),s("，我们先用她的模板上传、搭建属于自己的github博客，后续再慢慢维护成自己")])],-1),J=a("h3",{id:"_3-1第一步，删除从github上下载的源码里边的-git原始仓库信息"},[a("a",{class:"header-anchor",href:"#_3-1第一步，删除从github上下载的源码里边的-git原始仓库信息","aria-hidden":"true"},"#"),s(" 3.1第一步，删除从github上下载的源码里边的.git原始仓库信息")],-1),F=a("p",null,[a("img",{src:"/blog/_assets/image-20221120131746094.7514a09e.png",alt:"image-20221120131746094"})],-1),I=a("p",null,[s("3.2在当前目录打开终端 使用 "),a("code",null,"git版本控制工具"),s("执行以下命令上传到远端github仓库中")],-1),T=a("div",{class:"language-sh"},[a("pre",null,[a("code",null,'#从新初始化 当前目录 为本地git仓库\ngit init\n#将目录中所有内容均 暂存到 本地git仓库 缓冲区\ngit add .\n#将目录中所有内容均 提交到 本地git仓库\ngit commit -am "初始化我的博客"\n#将 本地git仓库 仓库与已知 远程git仓库 关联\ngit remote add origin https://github.com/JourneyFlower/article.git\n#允许在本地仓库与git仓库没有关连的情况下\n#拉取 远程git仓库的main分支 到 本地git仓库 (即使两者本身没有关连的提交记录)\ngit pull origin main --allow-unrelated-histories\n#将本git地仓库 推送到远程git仓库下的 main分支\ngit push origin HEAD:main\n')])],-1),q=a("blockquote",null,[a("p",null,[s("#从新初始化 当前目录 为本地git仓库 "),a("code",null,"git init")])],-1),x=a("p",null,[a("img",{src:"/blog/_assets/image-20221120132658330.2f18341f.png",alt:"image-20221120132658330"})],-1),P=a("blockquote",null,[a("p",null,[s("#将目录中所有内容均 暂存到 本地git仓库 缓冲区 "),a("code",null,"git add .")])],-1),D=a("p",null,[a("img",{src:"/blog/_assets/image-20221120132849980.0ff39632.png",alt:"image-20221120132849980"})],-1),j=a("blockquote",null,[a("p",null,[s("#将目录中所有内容均 提交到 本地git仓库 "),a("code",null,'git commit -am "初始化我的博客"')])],-1),N=a("p",null,[a("img",{src:"/blog/_assets/image-20221120132939131.2feddb57.png",alt:"image-20221120132939131"})],-1),L=a("blockquote",null,[a("p",null,[s("#将 本地git仓库 仓库与已知 远程git仓库 关联 "),a("code",null,"git remote add origin https://github.com/JourneyFlower/article.git")])],-1),M=a("p",null,[a("img",{src:"/blog/_assets/image-20221120133054663.4a6adcbd.png",alt:"image-20221120133054663"})],-1),O=a("blockquote",null,[a("p",null,[s("#允许在本地仓库与git仓库没有关连的情况下 #拉取 远程git仓库的main分支 到 本地git仓库 (即使两者本身没有关连的提交记录) "),a("code",null,"git pull origin main --allow-unrelated-histories")])],-1),H=a("p",null,[a("img",{src:"/blog/_assets/image-20221120133713389.e26945d5.png",alt:"image-20221120133713389"})],-1),K=a("blockquote",null,[a("p",null,[s("#将本git地仓库 推送到远程git仓库下的 main分支 "),a("code",null,"git push origin HEAD:main")])],-1),$=a("p",null,[a("img",{src:"/blog/_assets/image-20221120134132460.b38249be.png",alt:"image-20221120134132460"})],-1),U=a("p",null,[a("img",{src:"/blog/_assets/image-20221120134241654.380792b5.png",alt:"image-20221120134241654"})],-1),z=a("p",null,"至次，我们把vitepress模板上传到了 github 上",-1),B=a("p",null,[s("如果我们自己电脑上没有 "),a("code",null,"git版本控制工具"),s(" 可自行安装，或者直接使用"),a("code",null,"github网页上的功能"),s("上传博客源码")],-1),Z=a("p",null,[a("img",{src:"/blog/_assets/image-20221120135738526.2477be18.png",alt:"image-20221120135738526"})],-1),R=a("h2",{id:"_4-配置工作流"},[a("a",{class:"header-anchor",href:"#_4-配置工作流","aria-hidden":"true"},"#"),s(" 4.配置工作流")],-1),Y=a("blockquote",null,[a("p",null,"github上的工作流文件，可以帮助我们将项目打包，就比如我们上传的 vitepress博客模板 也必须被编译打包为静态资源 才能被 Github-Page 所使用。 其实我们是可以在本地将我们下载好的源代码打包好，上传到 Github-Page 上使用的，这样我们每次变动都要在本地打好包，再上传到Github-Page使用。 但是没必要，github上的工作流可以在我们的博客每次修改和新增文章的时候帮我们打包好，我们就只管推送更改就可以了。省去我们自己打包的功夫，一次布署，长期受益，所以说拥有工作流多是一件美事啊~")],-1),Q=a("h3",{id:"_4-1为我们对应的仓库创建工作流文件"},[a("a",{class:"header-anchor",href:"#_4-1为我们对应的仓库创建工作流文件","aria-hidden":"true"},"#"),s(" 4.1为我们对应的仓库创建工作流文件")],-1),V=a("p",null,[a("img",{src:"/blog/_assets/20221120.6250fac9.gif",alt:"20221120"})],-1),W=a("blockquote",null,[a("p",null,[s("其中文件名随便填写，规范写法，我们写 Deploy 也就是我们在仓库内 建了 "),a("code",null,".github/workflows/deploy.yml"),s(" 文件 格式是yaml 内容这里整理了")])],-1),X=a("div",{class:"language-yaml"},[a("pre",null,[a("code",null,[a("span",{class:"token comment"},"#这里的名字就是deploy.yml(工作流)文件的名字 可自定义"),s("\n"),a("span",{class:"token key atrule"},"name"),a("span",{class:"token punctuation"},":"),s(" Deploy\n"),a("span",{class:"token key atrule"},"on"),a("span",{class:"token punctuation"},":"),s("\n  "),a("span",{class:"token comment"},"#配置当push main分支的时候执行"),s("\n  "),a("span",{class:"token key atrule"},"push"),a("span",{class:"token punctuation"},":"),s("\n    "),a("span",{class:"token key atrule"},"branches"),a("span",{class:"token punctuation"},":"),s("\n      "),a("span",{class:"token punctuation"},"-"),s(" main      \n"),a("span",{class:"token key atrule"},"jobs"),a("span",{class:"token punctuation"},":"),s("\n  "),a("span",{class:"token comment"},"#工作流包含一个名为“build”的任务名称 可自定义"),s("\n  "),a("span",{class:"token key atrule"},"build-and-deploy"),a("span",{class:"token punctuation"},":"),s("\n    "),a("span",{class:"token comment"},"#将会在最新版本的ubuntu系统上执行"),s("\n    "),a("span",{class:"token key atrule"},"runs-on"),a("span",{class:"token punctuation"},":"),s(" ubuntu"),a("span",{class:"token punctuation"},"-"),s("latest\n    "),a("span",{class:"token key atrule"},"strategy"),a("span",{class:"token punctuation"},":"),s("\n      "),a("span",{class:"token key atrule"},"matrix"),a("span",{class:"token punctuation"},":"),s("\n        "),a("span",{class:"token key atrule"},"node"),a("span",{class:"token punctuation"},":"),s(),a("span",{class:"token punctuation"},"["),a("span",{class:"token string"},"'lts/fermium'"),a("span",{class:"token punctuation"},"]"),s("\n    "),a("span",{class:"token comment"},"#具体的执行步骤"),s("\n    "),a("span",{class:"token key atrule"},"steps"),a("span",{class:"token punctuation"},":"),s("\n      "),a("span",{class:"token comment"},"#检出main分支"),s("\n      "),a("span",{class:"token punctuation"},"-"),s(),a("span",{class:"token key atrule"},"name"),a("span",{class:"token punctuation"},":"),s(" Checkout\n        "),a("span",{class:"token key atrule"},"uses"),a("span",{class:"token punctuation"},":"),s(" actions/checkout@main\n        "),a("span",{class:"token key atrule"},"with"),a("span",{class:"token punctuation"},":"),s("\n          "),a("span",{class:"token key atrule"},"ref"),a("span",{class:"token punctuation"},":"),s(),a("span",{class:"token string"},"'main'"),s("\n          "),a("span",{class:"token key atrule"},"persist-credentials"),a("span",{class:"token punctuation"},":"),s(),a("span",{class:"token boolean important"},"false"),s("\n          "),a("span",{class:"token key atrule"},"fetch-depth"),a("span",{class:"token punctuation"},":"),s(),a("span",{class:"token number"},"0"),s("\n        "),a("span",{class:"token key atrule"},"env"),a("span",{class:"token punctuation"},":"),s("\n          "),a("span",{class:"token key atrule"},"TZ"),a("span",{class:"token punctuation"},":"),s(" Asia/Shanghai\n      "),a("span",{class:"token comment"},"#使用的node版本"),s("\n      "),a("span",{class:"token punctuation"},"-"),s(),a("span",{class:"token key atrule"},"name"),a("span",{class:"token punctuation"},":"),s(" Use Node.js $"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token punctuation"},"{"),s(" matrix.node"),a("span",{class:"token punctuation"},"-"),s("version "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},"}"),s("\n        "),a("span",{class:"token key atrule"},"uses"),a("span",{class:"token punctuation"},":"),s(" actions/setup"),a("span",{class:"token punctuation"},"-"),s("node@main\n        "),a("span",{class:"token key atrule"},"with"),a("span",{class:"token punctuation"},":"),s("\n          "),a("span",{class:"token key atrule"},"node-version"),a("span",{class:"token punctuation"},":"),s("  $"),a("span",{class:"token punctuation"},"{"),a("span",{class:"token punctuation"},"{"),s(" matrix.node "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},"}"),s("\n      "),a("span",{class:"token punctuation"},"-"),s(),a("span",{class:"token key atrule"},"name"),a("span",{class:"token punctuation"},":"),s(" Install dependencies\n        "),a("span",{class:"token comment"},"#run: npm install"),s("\n        "),a("span",{class:"token key atrule"},"run"),a("span",{class:"token punctuation"},":"),s(" yarn install\n      "),a("span",{class:"token comment"},"# - name: npm audit fix"),s("\n      "),a("span",{class:"token comment"},"#   run: npm audit fix       "),s("\n      "),a("span",{class:"token comment"},"# - name: Use yarn create vlib"),s("\n      "),a("span",{class:"token comment"},"#   run: yarn create vlib"),s("\n      "),a("span",{class:"token punctuation"},"-"),s(),a("span",{class:"token key atrule"},"name"),a("span",{class:"token punctuation"},":"),s(" Build My Blog\n        "),a("span",{class:"token comment"},"# run: npm run build"),s("\n        "),a("span",{class:"token key atrule"},"run"),a("span",{class:"token punctuation"},":"),s(" yarn run build\n      "),a("span",{class:"token punctuation"},"-"),s(),a("span",{class:"token key atrule"},"name"),a("span",{class:"token punctuation"},":"),s(" Deploy to Pages\n        "),a("span",{class:"token key atrule"},"env"),a("span",{class:"token punctuation"},":"),s("\n         "),a("span",{class:"token key atrule"},"TZ"),a("span",{class:"token punctuation"},":"),s(" Asia/Shanghai\n        "),a("span",{class:"token comment"},"#下面的 JourneyFlower 记得替换成自己的github帐号 "),s("\n        "),a("span",{class:"token comment"},"#@github.com/JourneyFlower/article.git 也替换成自己的"),s("\n        "),a("span",{class:"token comment"},"# secrets.GIT_EMAIL 是 工作流失败之后，需要通知的邮箱，换成自己的，一般写github账号邮箱"),s("\n        "),a("span",{class:"token comment"},"# secrets.ACCESS_TOKEN 需要自己创建，应用访问token，工作流执行的时候需要"),s("\n        "),a("span",{class:"token key atrule"},"run"),a("span",{class:"token punctuation"},":"),s(),a("span",{class:"token punctuation"},"|"),a("span",{class:"token scalar string"},'\n         cd .vitepress/dist\n         git config --global init.defaultBranch main\n         git config --global --add safe.directory "*"\n         git init\n         git config user.name "JourneyFlower"\n         git config user.email "${{ secrets.GIT_EMAIL }}"\n         git add .\n         git commit -m "Deploying to blog-pages from @ $GITHUB_SHA in $(date +"%Y年%m月%d日 %T %Z")"\n         git push -f https://JourneyFlower:${{ secrets.ACCESS_TOKEN }}@github.com/JourneyFlower/article.git main:blog-pages\n         cd - '),s("\n")])])],-1),nn=a("h3",{id:"_4-2注意"},[a("a",{class:"header-anchor",href:"#_4-2注意","aria-hidden":"true"},"#"),s(" 4.2注意")],-1),an=a("p",null,"下面的 JourneyFlower 记得替换成自己的github帐号 @github.com/JourneyFlower/article.git 也替换成自己的 secrets.GIT_EMAIL 是 工作流失败之后，需要通知的邮箱，换成自己的，一般写github账号邮箱 secrets.ACCESS_TOKEN 需要自己先创建，然后与GIT_EMAIL一同配置，工作流执行的时候需要",-1),sn=a("p",null,"创建token",-1),tn=a("p",null,[a("a",{href:"https://github.com/settings/tokens/new",target:"_blank",rel:"noopener noreferrer"},"New Personal Access Token (Classic)")],-1),en=a("p",null,[s("按照下图填写，并勾选后，最后点击最下面的 绿色 Generate token 按钮就可以了。"),a("img",{src:"/blog/_assets/image-20221120150900867.a9d41d22.png",alt:"image-20221120150900867"})],-1),ln=a("p",null,[s("配置 "),a("code",null,"secrets.GIT_EMAIL"),s(" 和 "),a("code",null,"secrets.ACCESS_TOKEN"),s("(这个在上图生成好后，会出现，可以直接复制一下)")],-1),on=a("p",null,[a("img",{src:"/blog/_assets/20221120002.d12e87c2.gif",alt:"image-20221120150900867"})],-1),cn=a("p",null,[a("code",null,"ACCESS_TOKEN"),s("我这里随便填写的，大家填 "),a("code",null,"ACCESS_TOKEN"),s(" 记得填写自己创建的那个 "),a("a",{href:"https://github.com/settings/tokens",target:"_blank",rel:"noopener noreferrer"},"Personal Access Tokens")],-1),un=a("p",null,[a("img",{src:"/blog/_assets/image-20221120152433219.8f7d94e0.png",alt:"image-20221120152433219"})],-1),pn=a("h3",{id:"_4-2提交文件"},[a("a",{class:"header-anchor",href:"#_4-2提交文件","aria-hidden":"true"},"#"),s(" 4.2提交文件")],-1),rn=a("p",null,[a("img",{src:"/blog/_assets/image-20221120145332665.03d8d170.png",alt:"image-20221120145332665"})],-1),gn=a("p",null,[a("img",{src:"/blog/_assets/image-20221120145514200.a6ac585c.png",alt:"image-20221120145514200"})],-1),kn=a("p",null,[a("img",{src:"/blog/_assets/image-20221120145607478.b0cc5e47.png",alt:"image-20221120145607478"})],-1),mn=a("p",null,[a("img",{src:"/blog/_assets/image-20221120154406172.6a4c70e8.png",alt:"image-20221120154406172"})],-1),hn=a("p",null,[a("img",{src:"/blog/_assets/image-20221120154440910.592aa06e.png",alt:"image-20221120154440910"})],-1),dn=a("h2",{id:"_5-设置github-page"},[a("a",{class:"header-anchor",href:"#_5-设置github-page","aria-hidden":"true"},"#"),s(" 5. 设置Github Page")],-1),bn=a("p",null,[a("img",{src:"/blog/_assets/image-20221120154819459.fe23e48b.png",alt:"image-20221120154819459"})],-1),_n=a("p",null,[a("img",{src:"/blog/_assets/image-20221120154935243.3d5ee40c.png",alt:"image-20221120154935243"})],-1),fn=a("h3",{id:"大功告成"},[a("a",{class:"header-anchor",href:"#大功告成","aria-hidden":"true"},"#"),s(" 大功告成")],-1),yn=a("h2",{id:"_6-配置gittalk"},[a("a",{class:"header-anchor",href:"#_6-配置gittalk","aria-hidden":"true"},"#"),s(" 6. 配置Gittalk")],-1),vn=a("h3",{id:"_6-1建存放评论的仓库-blog-comments"},[a("a",{class:"header-anchor",href:"#_6-1建存放评论的仓库-blog-comments","aria-hidden":"true"},"#"),s(" 6.1建存放评论的仓库 blog-comments")],-1),wn=a("p",null,[a("img",{src:"/blog/_assets/image-20221120155736162.ff8ad769.png",alt:"image-20221120155736162"})],-1),Gn=a("h3",{id:"_6-2创建issues设置标签初始化"},[a("a",{class:"header-anchor",href:"#_6-2创建issues设置标签初始化","aria-hidden":"true"},"#"),s(" 6.2创建"),a("code",null,"issues"),s("设置标签初始化")],-1),En=a("p",null,"以下这两个标签必须有",-1),Cn=a("ul",null,[a("li",null,"Gittalk"),a("li",null,"/blog/docs/co.html")],-1),Sn=a("p",null,[a("img",{src:"/blog/_assets/image-20221120160447461.a51cb279.png",alt:"image-20221120160447461"})],-1),An=a("p",null,[a("img",{src:"/blog/_assets/image-20221120160154644.571fe389.png",alt:"image-20221120160154644"})],-1),Jn=a("p",null,[a("img",{src:"/blog/_assets/image-20221120161553477.1863263a.png",alt:"image-20221120161553477"})],-1),Fn=a("h3",{id:"代码配置"},[a("a",{class:"header-anchor",href:"#代码配置","aria-hidden":"true"},"#"),s(" 代码配置")],-1),In=a("div",{class:"language-vue"},[a("pre",null,[a("code",null,[a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),s("template")]),a("span",{class:"token punctuation"},">")]),s("\n  "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),s("div")]),s(),a("span",{class:"token attr-name"},"id"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),s("gitalk-container"),a("span",{class:"token punctuation"},'"')]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),s("div")]),a("span",{class:"token punctuation"},">")]),s("\n"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),s("template")]),a("span",{class:"token punctuation"},">")]),s("\n\n"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),s("script")]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token script"},[a("span",{class:"token language-javascript"},[s("\n"),a("span",{class:"token keyword"},"export"),s(),a("span",{class:"token keyword"},"default"),s(),a("span",{class:"token punctuation"},"{"),s("\n  name"),a("span",{class:"token operator"},":"),s(),a("span",{class:"token string"},'"blog-comments"'),a("span",{class:"token punctuation"},","),s("\n  "),a("span",{class:"token function"},"mounted"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),s(),a("span",{class:"token punctuation"},"{"),s("\n    "),a("span",{class:"token keyword"},"const"),s(" commentConfig "),a("span",{class:"token operator"},"="),s(),a("span",{class:"token punctuation"},"{"),s("\n      "),a("span",{class:"token comment"},"//https://github.com/settings/applications/new"),s("\n      "),a("span",{class:"token comment"},"// 是否开启"),s("\n      enable"),a("span",{class:"token operator"},":"),s(),a("span",{class:"token boolean"},"true"),a("span",{class:"token punctuation"},","),s("\n      "),a("span",{class:"token comment"},"// clientID"),s("\n      clientID"),a("span",{class:"token operator"},":"),s(),a("span",{class:"token string"},'"aaaaaaaaaaaa"'),a("span",{class:"token punctuation"},","),s("\n      "),a("span",{class:"token comment"},"// clientSecret"),s("\n      clientSecret"),a("span",{class:"token operator"},":"),s(),a("span",{class:"token string"},'"aaaaaaaaaaaaaaaaSecret"'),a("span",{class:"token punctuation"},","),s("\n      "),a("span",{class:"token comment"},"// 评论项目名"),s("\n      repo"),a("span",{class:"token operator"},":"),s(),a("span",{class:"token string"},"'blog-comments'"),a("span",{class:"token punctuation"},","),s("\n      owner"),a("span",{class:"token operator"},":"),s(),a("span",{class:"token string"},"'JourneyFlower'"),a("span",{class:"token punctuation"},","),s("\n      admin"),a("span",{class:"token operator"},":"),s(),a("span",{class:"token punctuation"},"["),a("span",{class:"token string"},"'JourneyFlower'"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},","),s("\n      "),a("span",{class:"token comment"},"//githubID: 'JourneyFlower',"),s("\n      id"),a("span",{class:"token operator"},":"),s(),a("span",{class:"token function"},"decodeURI"),a("span",{class:"token punctuation"},"("),s("window"),a("span",{class:"token punctuation"},"."),s("location"),a("span",{class:"token punctuation"},"."),s("pathname"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},","),s("\n      proxy"),a("span",{class:"token operator"},":"),s(),a("span",{class:"token string"},"'https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token'"),a("span",{class:"token punctuation"},","),a("span",{class:"token comment"},"//避免跨域"),s("\n      language"),a("span",{class:"token operator"},":"),s(),a("span",{class:"token string"},"'zh-CN'"),a("span",{class:"token punctuation"},","),s("\n      distractionFreeMode"),a("span",{class:"token operator"},":"),s(),a("span",{class:"token boolean"},"true"),s("\n    "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),s("\n    "),a("span",{class:"token keyword"},"const"),s(" gitalk "),a("span",{class:"token operator"},"="),s(),a("span",{class:"token keyword"},"new"),s(),a("span",{class:"token class-name"},"Gitalk"),a("span",{class:"token punctuation"},"("),s("commentConfig"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),s("\n    gitalk"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"render"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"gitalk-container"'),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),s("\n  "),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},","),s("\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),s("\n")])]),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),s("script")]),a("span",{class:"token punctuation"},">")]),s("\n")])])],-1),Tn=a("blockquote",null,[a("p",null,[s("上面配置的 clientID 和 clientSecret 申请地址 "),a("a",{href:"https://github.com/settings/applications/new",target:"_blank",rel:"noopener noreferrer"},"https://github.com/settings/applications/new")]),a("p",null,[s("这一句也很重要，不配置可能导致 Gittalk 加载网络错误 proxy: '"),a("a",{href:"https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token",target:"_blank",rel:"noopener noreferrer"},"https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token"),s("',//避免跨域")]),a("p",null,"仓库名 repo: 'blog-comments', 仓库所有者信息 owner: 'JourneyFlower', 可维护仓库的人,可以填多个，以数组的形式 admin: ['JourneyFlower'],")],-1),qn=a("h2",{id:"_7-安全"},[a("a",{class:"header-anchor",href:"#_7-安全","aria-hidden":"true"},"#"),s(" 7.安全")],-1),xn=a("p",null,[a("img",{src:"/blog/_assets/image-20221120162352513.a7488c82.png",alt:"image-20221120162352513"})],-1),Pn=a("p",null,[a("img",{src:"/blog/_assets/image-20221120162513590.37d8ac7c.png",alt:"image-20221120162513590"})],-1),Dn=a("h2",{id:"_8-感想"},[a("a",{class:"header-anchor",href:"#_8-感想","aria-hidden":"true"},"#"),s(" 8. 感想")],-1),jn=a("p",null,"为了把把这个博客搭好，花了一天时间，写搭建心得花一天，这个周末也太充实流叭~",-1),Nn=a("h2",{id:"_9-特别感谢"},[a("a",{class:"header-anchor",href:"#_9-特别感谢","aria-hidden":"true"},"#"),s(" 9.特别感谢")],-1),Ln=a("p",null,[a("a",{href:"https://juejin.cn/post/7035473521480302629",target:"_blank",rel:"noopener noreferrer"},"瘦虎小哥哥")],-1),Mn=a("p",null,[a("a",{href:"https://jexlau.github.io/blog/",target:"_blank",rel:"noopener noreferrer"},"纪年小姐姐")],-1),On=a("p",null,[a("audio",{controls:"",src:"./REOL404notfound.mp3"})],-1);o.render=function(s,l,o,Hn,Kn,$n){const Un=e("Comment");return t(),n("div",null,[i,c,u,p,r,g,k,m,h,d,b,_,f,y,v,w,G,E,C,S,A,J,F,I,T,q,x,P,D,j,N,L,M,O,H,K,$,U,z,B,Z,R,Y,Q,V,W,X,nn,an,sn,tn,en,ln,on,cn,un,pn,rn,gn,kn,mn,hn,dn,bn,_n,fn,yn,vn,wn,Gn,En,Cn,Sn,An,Jn,Fn,In,Tn,qn,xn,Pn,Dn,jn,Nn,Ln,Mn,On,a(Un)])};export default o;export{l as __pageData};
